steps:

  ################################################################################
  # vsts-task-lib
  ################################################################################

  # npm install
  - task: Npm@1
    name: (vsts-task-lib) npm install
    inputs:
      command: install
      workingDir: node

  # use node 5
  - task: NodeTool@0
    name: (vsts-task-lib) use node 5.10.1
    condition: and(succeeded(), ne(variables.os, 'windows'))
    inputs:
      versionSpec: "5.10.1"
  - powershell: . $env:BUILD_SOURCESDIRECTORY\res\UseNode5.ps1
    name: (vsts-task-lib) use node 5.10.1
    condition: and(succeeded(), eq(variables.os, 'windows'))

  # build/test
  - script: node make.js test
    name: (vsts-task-lib) node make.js test
    workingDirectory: node

  # use node 6
  - task: NodeTool@0
    name: (vsts-task-lib) use node 6.10.3
    inputs:
      versionSpec: "6.10.3"

  # build/test
  - script: node make.js test
    name: (vsts-task-lib) node make.js test
    workingDirectory: node

  ################################################################################
  # VstsTaskSdk
  ################################################################################

  # npm install
  - task: Npm@1
    name: (VstsTaskSdk) npm install
    condition: and(succeeded(), eq(variables.os, 'windows'))
    inputs:
      command: install
      workingDir: powershell

  # npm test
  - task: Npm@1
    name: (VstsTaskSdk) npm test
    condition: and(succeeded(), eq(variables.os, 'windows'))
    inputs:
      command: test
      workingDir: powershell
